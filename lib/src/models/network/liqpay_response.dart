import 'package:liqpay/liqpay.dart';

/// Base LiqPay response class
class LiqPayResponse {
  /// Result of the response.
  ///
  /// `ok` in case of success
  /// `error` in case of failure
  final String result;

  /// Status of the result.
  ///
  /// `success` in case of success
  /// `failure` in case of error
  final String status;

  /// Numeric API version (e.g. "3") returned as string.
  final String? version;

  /// Order id specified during request.
  final String? orderId;

  /// Order id generated by LiqPay.
  final String? liqPayOrderId;

  /// Public key used in request that resulted in this response.
  final String? publicKey;

  /// Whether 3DS check was used during this payment.
  final bool? is3ds;

  /// Payment amount used in request that resulted in this response.
  final double? amount;

  /// Payment description used in request that resulted in this response.
  final String? description;

  /// Payment currency used in request that resulted in this response.
  final LiqPayCurrency? currency;

  /// Customer's language used in request that resulted in this response.
  final LiqPayLanguage? language;

  /// Action used in request that resulted in this response.
  final LiqPayAction? action;

  const LiqPayResponse(this.result, this.status,
      {this.version,
      this.action,
      this.orderId,
      this.liqPayOrderId,
      this.publicKey,
      this.is3ds,
      this.amount,
      this.description,
      this.currency,
      this.language});

  factory LiqPayResponse.success(Map<String, dynamic> json) =>
      LiqPaySuccessResponse.fromJson(json);
  factory LiqPayResponse.error(Map<String, dynamic> json) =>
      LiqPayErrorResponse.fromJson(json);

  /// Protected method to parse common fields in the JSON response.
  static LiqPayResponse parseCommon(Map<String, dynamic> json) {
    return LiqPayResponse(
      json['result'] as String,
      json['status'] as String,
      version: json['version']?.toString(),
      action: LiqPayAction.fromValue(json['action'] as String?),
      orderId: json['order_id'] as String?,
      liqPayOrderId: json['liqpay_order_id'] as String?,
      publicKey: json['public_key'] as String?,
      is3ds: json['is_3ds'] as bool?,
      amount: json['amount'] as double?,
      description: json['description'] as String?,
      currency: LiqPayCurrency.fromValue(json['currency'] as String?),
      language: LiqPayLanguage.fromValue(json['language'] as String?),
    );
  }
}
